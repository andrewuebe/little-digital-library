{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/andrewuebe/little-digital-library/comps/item.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  font-weight: 300;\\n  width: 100%;\\n  text-transform: uppercase;\\n  color: #afa49c;\\n  margin-bottom: 0px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  position: relative;\\n  align-items: flex-start;\\n  align-content: flex-start;\\n  width: calc(33% - 4rem);\\n  margin-right: 2rem;\\n  margin-bottom: 2rem;\\n  padding: 1rem;\\n  border: 1px solid #53443b;\\n  :nth-of-type(3n) {\\n    margin-right: 0px;\\n  }\\n  h1 {\\n    width: 100%;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nvar ItemCard = styled.div(_templateObject());\nvar ItemType = styled.div(_templateObject2());\n\nfunction truncate(string, chars) {\n  if (string.length > chars) {\n    var subString = string.replace(/^(.{18}[^\\s]*).*/, \"$1\");\n    return subString + \"...\";\n  } else {\n    return string;\n  }\n}\n\nvar Item = function Item(props) {\n  return __jsx(ItemCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(ItemType, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, props.type), __jsx(\"h1\", {\n    title: props.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, truncate(props.title, 20)), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, props.note));\n};\n\nexport default Item;","map":{"version":3,"sources":["/Users/andrewuebe/little-digital-library/comps/item.js"],"names":["React","styled","ItemCard","div","ItemType","truncate","string","chars","length","subString","replace","Item","props","type","title","note"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAV,mBAAd;AAmBA,IAAMC,QAAQ,GAAGH,MAAM,CAACE,GAAV,oBAAd;;AAQA,SAASE,QAAT,CAAkBC,MAAlB,EAA0BC,KAA1B,EAAgC;AAC9B,MAAGD,MAAM,CAACE,MAAP,GAAgBD,KAAnB,EAAyB;AACvB,QAAIE,SAAS,GAAGH,MAAM,CAACI,OAAP,CAAe,kBAAf,EAAmC,IAAnC,CAAhB;AACA,WAAOD,SAAS,GAAG,KAAnB;AACD,GAHD,MAII;AACF,WAAOH,MAAP;AACD;AACF;;AAED,IAAMK,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AAEpB,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWA,KAAK,CAACC,IAAjB,CADF,EAEE;AAAI,IAAA,KAAK,EAAED,KAAK,CAACE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBT,QAAQ,CAACO,KAAK,CAACE,KAAP,EAAc,EAAd,CAAjC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACG,IAAV,CAHF,CADF;AAOD,CATD;;AAWA,eAAeJ,IAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ItemCard = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  position: relative;\n  align-items: flex-start;\n  align-content: flex-start;\n  width: calc(33% - 4rem);\n  margin-right: 2rem;\n  margin-bottom: 2rem;\n  padding: 1rem;\n  border: 1px solid #53443b;\n  :nth-of-type(3n) {\n    margin-right: 0px;\n  }\n  h1 {\n    width: 100%;\n  }\n`;\n\nconst ItemType = styled.div`\n  font-weight: 300;\n  width: 100%;\n  text-transform: uppercase;\n  color: #afa49c;\n  margin-bottom: 0px;\n`;\n\nfunction truncate(string, chars){\n  if(string.length > chars){\n    var subString = string.replace(/^(.{18}[^\\s]*).*/, \"$1\");\n    return subString + \"...\";\n  }\n  else{\n    return string;\n  }\n}\n\nconst Item = props => {\n\n  return (\n    <ItemCard>\n      <ItemType>{props.type}</ItemType>\n      <h1 title={props.title}>{truncate(props.title, 20)}</h1>\n      <p>{props.note}</p>\n    </ItemCard>\n  );\n};\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}