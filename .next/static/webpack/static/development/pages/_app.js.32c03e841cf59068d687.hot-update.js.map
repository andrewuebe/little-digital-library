{"version":3,"file":"static/webpack/static/development/pages/_app.js.32c03e841cf59068d687.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App, { Container } from \"next/app\";\nimport Head from \"next/head\";\nimport Page from \"../comps/Page\";\nimport nextId from \"react-id-generator\"\nimport \"../static/style.css\";\n\nclass MyApp extends App {\n  constructor() {\n    super();\n\n    this.state = {\n      items: [],\n      searchField: \"\",\n      itemIsSelected: false,\n      itemSelected: {},\n      itemSelectedId: 9999,\n      itemLinkLocked: true,\n      itemIsShared: false,\n      inputAuthor: \"\",\n      inputUserId: 0,\n      inputId: 0,\n      inputTitle: \"\",\n      inputLink: \"\",\n      inputType: \"\",\n      inputNote: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // fetch items from endpoint\n    fetch(\"https://my-json-server.typicode.com/andrewuebe/test-db/posts\")\n      .then(response => response.json())\n      .then(posts => this.setState({ items: posts }));\n  }\n\n  searchItems = inputStr => {\n    this.setState({ searchField: inputStr });\n  };\n\n  changeItemInput = (val, inputKey) => {\n    const myNewState = { ...this.state }\n    myNewState[inputKey] = val;\n    this.setState(myNewState);\n  };\n\n  selectItem = inputID => {\n    var selectedItem = this.state.items.filter(item => {\n      return item.id === inputID;\n    });\n    this.setState({itemSelectedId: inputID});\n    this.setState({ itemSelected: selectedItem });\n    this.setState({ itemIsSelected: true });\n  };\n\n  validURL = str => {\n    var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n      '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\n    return !!pattern.test(str);\n  }\n\n  isInputValid = () => {\n    if(this.validURL(this.state.inputLink)){\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  itemSubmit = () => {\n    if(this.isInputValid){\n      const myNewState = { ...this.state }\n    myNewState.itemIsShared = true;\n    myNewState.itemLinkLocked = false;\n    const newArray = this.state.items.slice();\n    const newItem = {\n      'userId': this.state.inputUserId,\n      'id': nextId(),\n      'title': this.state.inputTitle,\n      'author': this.state.inputAuthor,\n      'link': this.state.inputLink,\n      'type': this.state.inputType,\n      'note': this.state.inputNote\n    };\n    newArray.push(newItem);\n    myNewState.items = newArray;\n    this.setState(myNewState);\n    }\n    else {\n\n    }\n  }\n\n  handleDelete = (itemId) => {\n    console.log(\"got here!\" + itemId);\n    const items = this.state.items.filter(item => item.id !== itemId);\n    this.setState({items: items});\n  }\n\n  returnToLibrary = () => {\n    const selectedItemId = this.state.itemSelectedId;\n    this.handleDelete(selectedItemId);\n    const obj = {};\n    this.setState({ itemSelected: obj });\n    this.setState({ itemIsShared: false });\n    this.setState({ itemIsSelected: false });\n  }\n\n  render() {\n\n    // filter item list by searchField\n    const { Component } = this.props;\n    const { items, searchField } = this.state;\n    const filteredItems = items.filter(item =>\n      item.title.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n\n    return (\n      <Container>\n        <Head>\n          <title>Little Digital Library</title>\n          <meta\n            name=\"viewport\"\n            content=\"initial-scale=1.0, width=device-width\"\n          />\n        </Head>\n        <Page>\n          <Component\n            items={filteredItems}\n            searchItems={this.searchItems}\n            itemIsSelected={this.state.itemIsSelected}\n            itemLinkLocked={this.state.itemLinkLocked}\n            selectItem={this.selectItem}\n            itemSelected={this.state.itemSelected}\n            changeItemInput={this.changeItemInput}\n            itemSubmit={this.itemSubmit}\n            itemIsShared={this.state.itemIsShared}\n            returnToLibrary={this.returnToLibrary}\n          />\n        </Page>\n      </Container>\n    );\n  }\n}\n\nexport default MyApp;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA6BA;AAAA;AAAA;AACA;AACA;AA/BA;AAiCA;AACA;AAAA;AACA;AAAA;AACA;AACA;AArCA;AAuCA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA9CA;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAxDA;AA0DA;AACA;AACA;AAEA;AACA;AACA;AACA;AAjEA;AAmEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAzFA;AA2FA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA/FA;AAiGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AArGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAHA;AAmBA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;AA+EA;AAEA;AAFA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;;AA7IA;AACA;AA+IA;;;;A","sourceRoot":""}