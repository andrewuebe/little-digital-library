{"version":3,"file":"static/webpack/static/development/pages/index.js.5a0d3f0b245c8a6e0da4.hot-update.js","sources":["webpack:///./comps/LeftSide.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLock } from \"@fortawesome/free-solid-svg-icons\";\nimport { faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Table = styled.img``;\n\nconst LeftWrapper = styled.div`\n  display: inline-block;\n  box-sizing: border-box;\n  width: 50%;\n  padding: 0px 2rem;\n  vertical-align: top;\n  h1 {\n    font-weight: 600;\n    font-size: 50px;\n    display: block;\n    position: relative;\n  }\n  @media screen and (max-width: 850px) {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst SearchBar = styled.input`\n  font-family: \"Hind\", Helvetica, sans-serif;\n  width: 100%;\n  height: 56px;\n  padding: 10px 20px;\n  position: relative;\n  transition: 0.3s all;\n  font-size: 20px;\n  background: none;\n  border: none;\n  border-bottom: 3px solid #afa49c;\n  color: #53443b;\n  ::placeholder {\n    color: #afa49c;\n  }\n  :focus {\n    border-bottom: 3px solid #53443b;\n    outline: none;\n  }\n`;\n\nconst ReviewCard = styled.div`\n  box-sizing: border-box;\n  display: block;\n  flex-wrap: wrap;\n  position: relative;\n  align-items: flex-start;\n  align-content: flex-start;\n  width: 100%;\n  margin-bottom: 1rem;\n  padding: 1rem;\n  border: 1px solid #53443b;\n  background-color: #f9ebef;\n  ::after {\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    background-color: #53443b;\n    border: 1px solid #53443b;\n    top: 2px;\n    left: 2px;\n\n    /* create a new stacking context */\n    position: absolute;\n    z-index: -1;\n  }\n`;\n\nconst FormTitle = styled.div`\n  font-size: 1rem;\n  text-transform: uppercase;\n  font-weight: 600;\n  margin-bottom: 2rem;\n`;\n\nconst ItemInfoField = styled.div`\n  display: block;\n  position: relative;\n  padding-top: 2rem;\n  padding-bottom: 1rem;\n  font-family: \"Montserrat\", Helvetica, sans-serif;\n  font-size: 40px;\n  line-height: 48px;\n  font-weight: 300;\n  .typeName {\n    font-size: 100px;\n  }\n  span {\n    font-family: \"Hind\", Helvetica, sans-serif;\n    display: block;\n    position: absolute;\n    font-size: 16px;\n    text-transform: uppercase;\n    color: #b9607a;\n    top: 0px;\n  }\n  p {\n    margin-bottom: 0px;\n  }\n`;\n\nconst LinkInputBox = styled.input`\ndisplay: inline-block;\n  width: calc(100% - 52px);\n  border: 1px solid #b9607a;\n  padding: 1rem 1rem 1rem 2.3rem;\n  box-sizing: border-box;\n`;\n\nconst LinkLock = styled.div`\n  position: absolute;\n  top: 44px;\n  padding-left: 10px;\n  width: calc(100% - 52px);\n  height: 47px;\n  border: 1px solid #b9607a;\n  color: #b9607a;\n`;\n\nconst LinkCopy = styled.button`\n  display: inline-block;\n  width: 52px;\n  height: 47px;\n  color: white;\n  background-color: #b9607a;\n  border: 1px solid #b9607a;\n  border-left: none;\n  :hover{\n    cursor: pointer;\n  }\n`;\n\nconst LeftSide = props => {\n  \n  function truncate(string) {\n    // regex\n    var subString = string.substring(0,20);\n    return subString + \"...\";\n  }\n\n  const linkBox = React.createRef();\n\n  function handleClick(e) {\n    linkBox.select();\n    document.execCommand('copy');\n  };\n\n  if (props.itemIsSelected) {\n    return (\n      <LeftWrapper>\n        <ReviewCard>\n          <FormTitle>What you're taking</FormTitle>\n          <h1>{props.selectedItem[0].title}</h1>\n          <ItemInfoField className={props.itemLinkLocked && \"link-locked\"}>\n            <span>Link</span>\n            <LinkInputBox\n              className={props.itemLinkLocked && \"link-locked\"}\n              ref={linkBox}\n              value={props.itemLinkLocked ? (truncate(props.selectedItem[0].link)) : props.selectedItem[0].link}\n            ></LinkInputBox>\n            <LinkCopy onClick={handleClick} className={props.itemLinkLocked && \"link-locked\"}><FontAwesomeIcon icon={faClipboard}></FontAwesomeIcon></LinkCopy>\n            <LinkLock className={props.itemLinkLocked ? \"item-link link-locked\" : \"item-link\"}>\n              {props.itemLinkLocked ? (\n                <FontAwesomeIcon icon={faLock}></FontAwesomeIcon>\n              ) : (\n                <FontAwesomeIcon icon={faLockOpen}></FontAwesomeIcon>\n              )}\n            </LinkLock>\n          </ItemInfoField>\n          <ItemInfoField>\n            <span>Item type</span>\n            {props.selectedItem[0].type.charAt(0).toUpperCase() +\n              props.selectedItem[0].type.slice(1)}\n          </ItemInfoField>\n          {props.selectedItem[0].author.length > 0 && (\n            <ItemInfoField>\n              <span>By</span>\n              {props.selectedItem[0].author}\n            </ItemInfoField>\n          )}\n          <ItemInfoField>\n            <span>Shared by</span>\n            {props.selectedItem[0].userId}\n          </ItemInfoField>\n          <ItemInfoField>\n            <span>A note from {props.selectedItem[0].userId}</span>\n            <p>{props.selectedItem[0].note}</p>\n          </ItemInfoField>\n        </ReviewCard>\n      </LeftWrapper>\n    );\n  } else {\n    return (\n      <LeftWrapper>\n        <h1>\n          Take an item.\n          <br /> Share an item.\n        </h1>\n        <p>\n          Inspired by the{\" \"}\n          <a href=\"https://littlefreelibrary.org/\">Little Free Library</a>{\" \"}\n          book-sharing movement, the Little Digital Library contains a small\n          selection of links shared by others in your community. The one catch?\n          You need to leave a link in exchange for taking one.\n        </p>\n        <p>\n          So take a look around, and hopefully discover something new and\n          exciting that a neighbor left for you.\n        </p>\n        <SearchBar\n          type=\"search\"\n          placeholder=\"Search items\"\n          onChange={e => props.searchItems(e.target.value)}\n        ></SearchBar>\n        <Table src=\"../static/table.svg\"></Table>\n      </LeftWrapper>\n    );\n  }\n};\n\nexport default LeftSide;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AA2BA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AA0BA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAYA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;;;;A","sourceRoot":""}